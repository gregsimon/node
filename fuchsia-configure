#!/bin/bash

# In order to cross-compile node for Fuchsia using the "Chrome" SDK, run:
#   source fuchsia-configure <path_to_sdk> [arch]
#
# By running fuchsia-configure with source, will allow environment variables to
# be persistent in current session. This is useful for installing native node
# modules with npm. Also, don't forget to set the arch in npm config using
# 'npm config set arch=<arch>'


if [ -z "$2" ]; then
    ARCH=x64
else
    ARCH="$2"
fi

CC_VER="4.9"
case $ARCH in
    arm)
        DEST_CPU="$ARCH"
        SUFFIX="$ARCH-linux-androideabi"
        TOOLCHAIN_NAME="$SUFFIX"
        ;;
    x86)
        DEST_CPU="x64"
        SUFFIX="i686-linux-fuchsia"
        TOOLCHAIN_NAME="$ARCH"
        ;;
    x86_64)
        DEST_CPU="x64"
        SUFFIX="$ARCH-linux-fuchsia"
        TOOLCHAIN_NAME="$ARCH"
        ;;
    x64)
        DEST_CPU="x64"
        SUFFIX="$ARCH-linux-fuchsia"
        TOOLCHAIN_NAME="$ARCH"
        ;;
    *)
        echo "Unsupported architecture provided: $ARCH"
        exit 1
        ;;
esac

SDK_PATH=$1
#function make_toolchain {
#    $NDK_PATH/build/tools/make-standalone-toolchain.sh \
#         --toolchain=$TOOLCHAIN_NAME-$CC_VER \
#        --arch=$ARCH \
#        --install-dir=$TOOLCHAIN \
#        --platform=android-21
#}

#export TOOLCHAIN=$PWD/android-toolchain
#if [ -d "$TOOLCHAIN" ]; then
#    read -r -p "NDK toolchain already exists. Replace it?  [y/N]" response
#    case "$response" in
#        [Yy])
#            rm -rf "$TOOLCHAIN"
#            make_toolchain
#    esac
#else
#    make_toolchain
#fi

export PATH=$SDK_PATH/tools:$PATH
export AR=ar
export CC=clang
export CXX=clang++
export LINK=clang++
export FUCHSIA_SDK=$SDK_PATH

GYP_DEFINES="target_arch=$ARCH"
GYP_DEFINES+=" v8_target_arch=$ARCH"
GYP_DEFINES+=" android_target_arch=$ARCH"
GYP_DEFINES+=" host_os=linux OS=fuchsia"
export GYP_DEFINES

if [ -f "configure" ]; then
    ./configure \
        --dest-cpu=$DEST_CPU \
        --dest-os=fuchsia \
        --cross-compiling \
        --without-snapshot \
        --openssl-no-asm
fi
